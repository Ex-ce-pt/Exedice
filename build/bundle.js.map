{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/NavBar.svelte","../../src/Header.svelte","../../src/Pads.svelte","../../src/Stack.svelte","../../src/projectIcons/ExediceIcon.svelte","../../src/projectIcons/GravityWarpIcon.svelte","../../src/Projects.svelte","../../src/SelfIntroduction.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script lang=\"ts\">\r\n    \r\n    import { tick } from \"svelte\";\r\n\r\n    let thisObj: HTMLElement;\r\n    let folded: boolean = false;\r\n    let copyStatus: 'success' | 'fail' | 'undef' = 'undef';\r\n\r\n    const toggleFold = (): void => {\r\n        folded = !folded;\r\n\r\n        const style = getComputedStyle(thisObj);\r\n        const height = style.getPropertyValue('--nav-height');\r\n\r\n        thisObj.style.top = folded ? `calc(-${height})` : \"0\";\r\n    }\r\n\r\n    const goTo = (url: string): void => {\r\n        window.open(url, '_blank');\r\n    }\r\n\r\n    const copy = (txt: string): void => {\r\n        // Async is needed to update the actual element,\r\n        // since when the same value is assigned to the copyStatus,\r\n        // the element doesn't update\r\n        navigator.clipboard.writeText(txt).then(async () => {\r\n            copyStatus = 'undef';\r\n            await tick();\r\n            copyStatus = 'success';\r\n        }).catch(async () => {\r\n            copyStatus = 'undef';\r\n            await tick();\r\n            copyStatus = 'fail';\r\n        });\r\n    }\r\n\r\n    setTimeout(toggleFold, 2000);\r\n\r\n    // TODO:\r\n    // SoundCloud, Gmail\r\n\r\n</script>\r\n\r\n<nav bind:this={thisObj}>\r\n\r\n    <div class=\"content\">\r\n\r\n        <button title=\"Email\" on:click={() => copy(\"except.dice@gmail.com\")}>\r\n            <svg\r\n               width=\"100\"\r\n               height=\"100\"\r\n               viewBox=\"0 0 100 100\"\r\n               id=\"email-logo\"\r\n            >\r\n                <path\r\n                    d=\"M 43.531157,99.631787 C 27.218204,97.766382 11.461454,86.173211 4.5058462,70.918535 -1.5019487,57.742586 -1.5019487,42.3009 4.5058462,29.124934 9.0893112,19.072725 17.916645,10.056001 28.001169,5.1255056 59.285405,-10.169892 96.218273,10.408777 99.736864,45.095987 101.21477,59.66548 96.430046,73.637969 86.319362,84.278177 75.065634,96.121318 60.025942,101.51797 43.531157,99.631787 Z M 82.054509,70.188456 c 0.601881,-0.858827 0.693745,-3.535805 0.693745,-20.216483 0,-18.268102 -0.04245,-19.278991 -0.85209,-20.278062 l -0.852092,-1.05151 -31.123213,0.142585 c -30.688423,0.140565 -31.134117,0.155379 -31.903103,1.051493 -0.716671,0.835191 -0.779884,2.467596 -0.779884,20.135443 0,16.680678 0.0918,19.357657 0.69373,20.216483 l 0.693747,0.989914 H 49.99305 81.360762 Z M 54.226731,69.344595 C 41.358608,69.150346 28.997341,68.932294 26.757217,68.860042 l -4.072924,-0.131307 10.980477,-8.090529 10.980495,-8.090545 1.336946,1.077131 c 0.735333,0.592409 1.875262,1.375348 2.5332,1.739857 1.134657,0.628586 1.295276,0.587359 3.119536,-0.800732 1.057817,-0.80489 2.15362,-1.604208 2.435107,-1.776235 0.29513,-0.180395 5.200429,3.096804 11.586881,7.741103 9.705431,7.057907 12.928807,9.504915 12.173261,9.241259 -0.113861,-0.03973 -10.735355,-0.231133 -23.603465,-0.425365 z M 20.357408,49.793245 V 33.254967 l 3.032068,2.370446 c 12.342066,9.648931 18.320587,14.438255 18.338357,14.690632 0.01701,0.242092 -18.97935,14.54724 -20.813363,15.673409 -0.441786,0.271281 -0.557062,-3.080089 -0.557062,-16.196209 z m 47.907259,8.659135 c -5.882564,-4.28595 -10.735221,-7.936177 -10.783696,-8.111639 -0.08455,-0.306229 20.85712,-16.642632 21.724945,-16.947364 0.261696,-0.09191 0.422802,6.144959 0.422802,16.36854 0,9.084365 -0.150412,16.50939 -0.334241,16.500064 -0.183829,-0.0101 -5.147248,-3.523651 -11.02981,-7.809601 z M 36.724765,42.08581 24.347782,32.205629 37.059006,32.087454 c 6.991181,-0.06498 18.43585,-0.06498 25.432613,0 l 12.721379,0.118175 -12.511662,9.70652 C 55.819934,47.25072 49.944895,51.696814 49.645722,51.792331 49.346549,51.88778 43.532117,47.519915 36.724765,42.08581 Z\"\r\n                />\r\n            </svg>            \r\n        </button>\r\n\r\n        <button title=\"Discord\" on:click={() => copy(\"Exedice#7316\")}>\r\n            <svg\r\n                width=\"100\"\r\n                height=\"100\"\r\n                viewBox=\"0 0 100 100\"\r\n                id=\"discord-logo\"\r\n            >\r\n                <path\r\n                    d=\"m 64.096087,12.0355 -2.637779,5.36271 c -7.558745,-1.12367 -15.158248,-0.896531 -22.808,0.05282 l -2.68272,-5.394012 C 29.127069,13.248311 20.490937,16.006893 15.39877,18.421448 8.5583951,28.448353 2.7634186,41.325758 0,57.803417 L 0.45916902,75.2063 C 6.5352168,80.296883 21.639148,87.282988 25.772083,87.9645 c 1.638405,-2.032566 4.845834,-7.038163 5.500258,-8.817852 -1.479858,-0.529422 -6.825507,-2.793299 -8.384231,-4.094912 1.365676,-0.997242 1.903109,-1.529965 1.903109,-1.529965 0,0 10.981925,5.778825 25.377393,5.626833 14.395466,-0.15199 25.209355,-5.648355 25.209355,-5.648355 0,0 1.483923,1.223653 1.869893,1.57301 -1.128718,1.069501 -8.454572,4.104694 -8.454572,4.104694 0,0 4.325842,7.92067 5.445549,8.733723 C 79.157425,87.303633 98.572353,77.598989 99.637723,75.174994 99.95929,71.086989 100.24334,63.241967 99.672893,57.803417 98.279502,44.941861 93.346862,30.48537 84.733292,18.425362 78.420626,15.235637 71.471289,13.60935 64.096087,12.0355 Z m 2.66318,31.743874 a 9.1286709,9.9545661 0 0 1 9.128671,9.954567 9.1286709,9.9545661 0 0 1 -9.128671,9.954565 9.1286709,9.9545661 0 0 1 -9.12867,-9.954565 9.1286709,9.9545661 0 0 1 9.12867,-9.954567 z m -33.308316,0.197604 a 9.1286709,9.9545661 0 0 1 9.128671,9.954567 9.1286709,9.9545661 0 0 1 -9.128671,9.954565 9.1286709,9.9545661 0 0 1 -9.12867,-9.954565 9.1286709,9.9545661 0 0 1 9.12867,-9.954567 z\"\r\n                />\r\n            </svg>\r\n        </button>\r\n\r\n        <button title=\"GitHub\" on:click={() => goTo('https://github.com/Ex-ce-pt')}>\r\n            <svg\r\n                width=\"512\"\r\n                height=\"512\"\r\n                viewBox=\"0 0 512 512.00002\"\r\n                id=\"github-logo\"\r\n            >\r\n                <path\r\n                    d=\"M 256 0 A 256 256 0 0 0 0 256 A 256 256 0 0 0 192.9668 503.60742 C 192.9313 491.76688 192.79813 447.7772 192.78711 445.0957 C 162.76699 451.85506 147.43723 447.28769 129 441.73242 C 110.56277 436.17716 96.15947 394.10616 91.775391 389.04883 C 87.391311 383.99149 83.750269 380.72636 78.164062 377.24805 C 72.577856 373.76973 62.566838 368.4209 69.318359 363.61719 C 76.069881 358.81347 80.251033 360.37211 96.300781 366.39062 C 121.95556 380.33663 135.1736 415.90656 159.59961 415.92383 C 184.02561 415.94113 193.12109 409.71289 193.12109 409.71289 C 193.12109 409.71289 196.10678 379.71206 208.41797 375.55664 C 201.24817 374.69029 103.62731 370.30774 94.716797 282.64258 C 85.806288 194.97741 118.21484 180.88867 118.21484 180.88867 C 118.21484 180.88867 103.48479 124.31041 124.05469 111.98438 C 146.97997 107.70507 192.49609 138.53125 192.49609 138.53125 C 192.49609 138.53125 222.41382 128.96427 255.98438 129.10352 C 289.55492 129.24276 319.52344 138.51367 319.52344 138.51367 C 319.52344 138.51367 345.98965 109.41146 388.25586 111.3125 C 404.80368 131.31953 393.5 180.10742 393.5 180.10742 C 393.5 180.10742 420.64758 180.06397 415.86328 275.99414 C 411.07898 371.92427 302.46484 375.42969 302.46484 375.42969 C 302.46484 375.42969 309.09244 374.58367 315.70508 395.25391 C 321.44334 413.19094 320.09603 484.12251 319.62305 503.48047 A 256 256 0 0 0 512 256 A 256 256 0 0 0 256 0 z M 261.9668 511.57422 L 250.08789 511.57812 A 256 256 0 0 0 256 512 A 256 256 0 0 0 261.9668 511.57422 z \"\r\n                />\r\n           </svg>\r\n        </button>\r\n\r\n        <button title=\"YouTube\" on:click={() => goTo('https://www.youtube.com/@ExediceWhyNot')}>\r\n            <svg\r\n               width=\"100\"\r\n               height=\"100\"\r\n               viewBox=\"0 0 100 100\"\r\n               id=\"youtube-logo\"\r\n            >\r\n              <path\r\n                 d=\"M 15 17.5 C 6.6900083 17.5 0 24.190008 0 32.5 L 0 67.5 C 0 75.809992 6.6900083 82.5 15 82.5 L 85 82.5 C 93.309992 82.5 100 75.809992 100 67.5 L 100 32.5 C 100 24.190008 93.309992 17.5 85 17.5 L 15 17.5 z M 40 35 L 60 50 L 40 65 L 40 35 z \"\r\n               />\r\n            </svg>\r\n\r\n        </button>\r\n\r\n        <button title=\"SoundCloud\" on:click={() => goTo('https://soundcloud.com/exedice-ex_ce_pt')}>\r\n            <svg\r\n               width=\"100\"\r\n               height=\"100\"\r\n               viewBox=\"0 0 100 100\"\r\n               id=\"soundcloud-logo\"\r\n            >\r\n               <path\r\n                 d=\"M 50,0 A 50,50 0 0 0 0,50 50,50 0 0 0 50,100 50,50 0 0 0 100,50 50,50 0 0 0 50,0 Z m 11.640625,31.175781 c 14.053738,1.895808 16.669132,13.960449 16.978516,17.039063 1.411028,-0.545038 2.799819,-0.691715 4.18164,-0.740235 6.65559,0.408344 10.563435,4.337361 10.583985,11.246094 0.02055,6.908733 -5.819824,10.850026 -13.607422,10.033203 l -26.701172,-0.02148 c -0.765517,-0.03274 -1.098495,-0.65649 -1.109375,-1.501953 l 0.119141,-34.421875 c 3.889082,-1.953114 6.480409,-1.508181 9.554687,-1.632813 z m -11.847656,2.462891 c 0.878758,-0.004 1.132812,0.814453 1.132812,0.814453 0.509908,11.913217 0.486328,22.092533 0.01953,33.699219 0,0 -0.319283,0.596556 -1.09375,0.597656 -0.774454,0.0011 -1.179687,-0.582031 -1.179687,-0.582031 -0.437535,-11.218153 -0.542172,-22.451208 -0.02344,-33.710938 0,0 0.265773,-0.814359 1.144531,-0.818359 z m -3.660157,2.085937 c 0.814905,-0.0089 1.089844,0.763672 1.089844,0.763672 0.217054,10.569403 0.464672,21.13013 0,31.699219 0,0 -0.263563,0.580538 -1.078125,0.585938 -0.814563,0.0054 -1.054687,-0.628907 -1.054687,-0.628907 C 44.667358,57.596488 44.705583,47.048043 45.078125,36.5 c 0,0 0.239793,-0.766491 1.054687,-0.775391 z m -10.851562,2.5625 c 0.750507,-0.002 0.857422,0.574219 0.857422,0.574219 0.491246,9.810569 0.597816,19.621071 0.0078,29.431641 0,0 -0.306312,0.506112 -0.849609,0.507812 -0.543298,0.0017 -0.867187,-0.505859 -0.867187,-0.505859 -0.548608,-9.772079 -0.548392,-19.587939 -0.01367,-29.44336 0,10e-7 0.114728,-0.562453 0.865234,-0.564453 z m 3.601562,0.363282 c 0.747681,-0.0034 0.904297,0.753906 0.904297,0.753906 0.631791,9.616932 0.495797,19.234631 0.01172,28.851562 0,0 -0.296299,0.539769 -0.90039,0.542969 C 38.294338,68.802029 37.951172,68.25 37.951172,68.25 37.54599,58.59307 37.240999,48.947213 37.9375,39.40625 c 0,0 0.197642,-0.752459 0.945312,-0.755859 z m -7.203124,0.330078 c 0.669086,-0.0094 0.765624,0.65625 0.765624,0.65625 0.75212,9.514832 0.629198,19.118019 -0.01953,28.75 0,0 -0.287225,0.433534 -0.753906,0.427734 -0.466681,-0.0058 -0.738281,-0.431641 -0.738281,-0.431641 -0.476272,-9.579347 -0.697174,-19.158926 -0.05078,-28.738281 0,0 0.127782,-0.654662 0.796876,-0.664062 z m 10.851562,0.347656 c 0.689851,0.0025 0.921875,0.570313 0.921875,0.570313 0.505614,9.40414 0.614937,18.762876 0.0625,28.109374 0,0 -0.249924,0.807233 -1.015625,0.820313 -0.765702,0.01308 -1.046875,-0.804687 -1.046875,-0.804687 -0.328772,-9.41678 -0.385676,-18.8042 0.09375,-28.132813 0,0 0.294525,-0.565 0.984375,-0.5625 z m -14.421875,1.271484 c 0.500347,-0.0046 0.660156,0.427735 0.660156,0.427735 0.457811,8.9664 1.077891,17.92735 -0.0039,27.441406 0,0 -0.253732,0.359669 -0.664063,0.355469 -0.410323,-0.0042 -0.710937,-0.355469 -0.710937,-0.355469 -0.851192,-9.029563 -0.2454,-18.267461 -0.0039,-27.453125 0,0 0.222308,-0.411416 0.722656,-0.416016 z m -3.464844,3.214844 c 0.421882,0.0011 0.585938,0.466797 0.585938,0.466797 0.03511,4.731685 0.662415,10.187144 0.666015,14.1875 0.03938,2.464762 -0.47022,6.473844 -0.658203,9.816406 0,0 -0.187234,0.468462 -0.601562,0.472656 -0.414334,0.0042 -0.683594,-0.472656 -0.683594,-0.472656 -0.184984,-3.333503 -0.332277,-6.960901 -0.546875,-9.794922 0.07579,-3.390664 0.4724,-9.473202 0.5625,-14.208984 0,0 0.253904,-0.467897 0.675781,-0.466797 z m -7.011719,5.044922 c 0.433129,-0.01014 0.511719,0.492187 0.511719,0.492187 0.307272,3.038268 0.60931,6.138938 0.824219,9.167969 -0.185227,3.204903 -0.561597,6.390728 -0.84375,9.585938 0,0 -0.07435,0.417693 -0.453125,0.417969 -0.378773,2.73e-4 -0.527344,-0.457032 -0.527344,-0.457032 -0.247557,-3.176501 -0.566368,-6.388665 -0.738281,-9.527344 0.185069,-3.070941 0.479197,-6.123134 0.730469,-9.15625 0,0 0.06297,-0.513297 0.496093,-0.523437 z m -3.40039,0.369141 c 0.287498,2.97e-4 0.36914,0.339843 0.36914,0.339843 0.328291,2.910039 0.579714,6.012341 0.826172,9.126953 -0.243779,3.049171 -0.48915,6.097312 -0.814453,9.146485 0,0 -0.02611,0.35798 -0.396484,0.357422 -0.370376,-5.57e-4 -0.441406,-0.394531 -0.441406,-0.394531 -0.282482,-3.089211 -0.529319,-6.142511 -0.728516,-9.148438 0.215527,-3.053847 0.455454,-6.098796 0.794922,-9.111328 0,0 0.103127,-0.316703 0.390625,-0.316406 z m 6.904297,0.24414 c 0.37456,-0.0071 0.503906,0.417969 0.503906,0.417969 0.244204,2.912655 0.586408,5.873211 0.794922,8.890625 -0.171719,3.134637 -0.541112,6.253716 -0.757813,9.404297 0,0 -0.105455,0.516272 -0.550781,0.513672 -0.445321,-0.0026 -0.583984,-0.525391 -0.583984,-0.525391 -0.191838,-3.147594 -0.5051,-6.245554 -0.675781,-9.279297 0.169023,-3.045378 0.466908,-6.002946 0.710937,-8.996093 0,0 0.184028,-0.418682 0.558594,-0.425782 z m -10.332031,1.261719 c 0.311853,-0.0049 0.328125,0.453125 0.328124,0.453125 0.315041,2.556487 0.656659,5.070564 0.90625,7.605469 -0.304686,2.515044 -0.609375,5.068477 -0.914062,7.671875 0,0 -0.08198,0.306494 -0.335938,0.308594 -0.25396,0.0021 -0.363281,-0.316407 -0.363281,-0.316407 -0.263019,-2.536145 -0.526042,-5.086735 -0.7890622,-7.652343 0.2438355,-2.575779 0.4558002,-5.127624 0.7851562,-7.617188 0,0 0.07096,-0.448225 0.382813,-0.453125 z m -3.1542974,2.955078 c 0.3171291,0.0038 0.3320313,0.34375 0.3320313,0.34375 L 8.59375,58.765625 7.8261719,63.65625 c 0,0 -0.06912,0.275584 -0.2519531,0.271484 -0.182834,-0.0041 -0.2714844,-0.259765 -0.2714844,-0.259765 l -0.6132813,-4.900391 0.5742188,-4.71289 c 0,0 0.06959,-0.369035 0.3867187,-0.365235 z\"\r\n                />\r\n            </svg>\r\n        </button>\r\n\r\n        <button title=\"GameJolt\" on:click={() => goTo('https://gamejolt.com/@Exedice')}>\r\n            <svg\r\n               width=\"16\"\r\n               height=\"17\"\r\n               viewBox=\"0 0 16 17\"\r\n               id=\"gamejolt-logo\"\r\n            >\r\n               <path\r\n                    d=\"M 4 0 L 4 2 L 3 2 L 3 4 L 2 4 L 2 6 L 1 6 L 1 8 L 0 8 L 0 10 L 6 10 L 6 13 L 5 13 L 5 14 L 4 14 L 4 16 L 5 16 L 5 15 L 6 15 L 6 14 L 7 14 L 7 13 L 8 13 L 8 12 L 9 12 L 9 11 L 10 11 L 10 10 L 11 10 L 11 9 L 12 9 L 12 8 L 13 8 L 13 7 L 14 7 L 14 6 L 15 6 L 15 5 L 12 5 L 12 4 L 13 4 L 13 3 L 14 3 L 14 2 L 15 2 L 15 1 L 16 1 L 16 0 L 4 0 z M 4 16 L 3 16 L 3 17 L 4 17 L 4 16 z M 5 2 L 12 2 L 12 3 L 11 3 L 11 4 L 10 4 L 10 5 L 9 5 L 9 6 L 8 6 L 8 7 L 9 7 L 9 8 L 8 8 L 8 7 L 7 7 L 7 8 L 6 8 L 6 7 L 5 7 L 5 8 L 4 8 L 4 7 L 3 7 L 3.0117188 6 L 3 6 L 3.0117188 5.9980469 L 3.0117188 6 L 4 6 L 4 4 L 5 4 L 5 2 z M 4 6 L 4 7 L 5 7 L 5 6 L 4 6 z M 6 7 L 7 7 L 7 6 L 6 6 L 6 7 z M 10 7 L 11 7 L 11 8 L 10 8 L 10 7 z \"\r\n                />\r\n            </svg>\r\n        </button>\r\n\r\n\r\n    </div>\r\n\r\n    <button on:click={toggleFold}></button>\r\n\r\n    {#key copyStatus}\r\n    <div\r\n        class=\"copy-status\"\r\n        data-status={copyStatus}\r\n    >\r\n        {#if copyStatus === 'success'}\r\n        Copied to Clipboard!\r\n        {:else if copyStatus === 'fail'}\r\n        Failed to Copy!\r\n        {/if}\r\n    </div>\r\n    {/key}\r\n\r\n</nav>\r\n\r\n<style>\r\n\r\n    nav {\r\n        --nav-height: 5em;\r\n        --toggle-height: 1em;\r\n        --animation-duration: 0.5s;\r\n\r\n        display: grid;\r\n        grid-template-rows: 1fr var(--toggle-height);\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: calc(100vw - var(--scrollbar-width));\r\n        height: calc(var(--nav-height) + var(--toggle-height));\r\n        background-color: var(--color-bg);\r\n        z-index: 100;\r\n        overflow-x: scroll;\r\n        transition: top var(--animation-duration) var(--ease-out);\r\n    }\r\n\r\n    nav::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    nav > button {\r\n        width: 100%;\r\n        height: var(--toggle-height);\r\n        background-color: var(--color-shaded);\r\n    }\r\n\r\n    .content {\r\n        display: flex;\r\n        align-items: center;\r\n        height: var(--nav-height);\r\n    }\r\n\r\n    .content > button {\r\n        height: 50%;\r\n        aspect-ratio: 1 / 1;\r\n        padding: 0;\r\n        margin: 0.5em;\r\n        background-color: transparent;\r\n        border: none;\r\n    }\r\n\r\n    button > svg {\r\n        width: 100%;\r\n        height: 100%;\r\n        stroke: none;\r\n        fill: var(--color-shaded);\r\n        transition: fill 0.2s ease;\r\n    }\r\n\r\n    button:hover > svg {\r\n        fill: cyan;\r\n    }\r\n    \r\n    button {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .copy-status {\r\n        position: absolute;\r\n        top: -50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        padding: 7px;\r\n        border: 3px solid green;\r\n        border-radius: 1em;\r\n        background-color: var(--color-bg);\r\n        font-size: var(--very-small-font-size);\r\n        font-weight: bold;\r\n        user-select: none;\r\n        -webkit-user-select: none;\r\n    }\r\n\r\n    .copy-status[data-status=\"success\"] {\r\n        color: green;\r\n    }\r\n\r\n    .copy-status[data-status=\"fail\"] {\r\n        color: red;\r\n    }\r\n\r\n    .copy-status:not([data-status=\"undef\"]) {\r\n        animation-name: show-copy-status;\r\n        animation-duration: 2s;\r\n        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\r\n        animation-fill-mode: forwards;\r\n        animation-direction: alternate;\r\n        animation-iteration-count: 2;\r\n    }\r\n\r\n    @keyframes show-copy-status {\r\n        0% { top: -50%; }\r\n        100% { top: 50%; }\r\n    }\r\n\r\n</style>","<main>\r\n\r\n    <div class=\"shade\"></div>\r\n    <img src=\"{window.location.href}icons/mark neo.svg\" alt=\"\" />\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    main {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: relative;\r\n        width: 100%;\r\n        height: 75vmin;\r\n        isolation: isolate;\r\n        background-color: grey;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-image: url('');\r\n        border-bottom-left-radius: 1em;\r\n        border-bottom-right-radius: 1em;\r\n    }\r\n\r\n    .shade {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        z-index: 1;\r\n    }\r\n    \r\n    img {\r\n        width: 50%;\r\n        height: 50%;\r\n        z-index: 2;\r\n    }\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\t\r\n\timport { isMobileUser } from \"./App.svelte\";\r\n\r\n\texport let parent: HTMLElement;\r\n\r\n\tconst PADS_COUNT = 30;\r\n\t\r\n\tlet posY = -100;\r\n\tlet listenerSet = false;\r\n\t\r\n\t$: if (parent != undefined && !listenerSet) {\r\n\t\tif (!isMobileUser) {\r\n\t\t\tparent.addEventListener('mousemove', updatePosCursor);\r\n\t\t} else {\r\n\t\t\tdocument.body.addEventListener('scroll', updatePosScroll);\r\n\t\t}\r\n\t\tlistenerSet = true;\r\n\t}\r\n\t\r\n\tconst updatePosCursor = (e: MouseEvent): void => {\r\n        const offsetY = e.clientY - parent.getBoundingClientRect().y;\r\n\t\tposY = Math.floor(offsetY / parent.clientHeight * PADS_COUNT);\r\n\t}\r\n\t\r\n\tconst updatePosScroll = (e: Event): void => {\r\n\t\tconst scrolled = document.body.scrollTop - parent.offsetTop + document.body.clientHeight / 2;\r\n\t\tposY = Math.floor(scrolled / parent.clientHeight * PADS_COUNT);\r\n\t}\r\n\t\r\n\tconst clampActivation = (a: number): number => {\r\n\t\treturn Math.min(Math.max(a, 0), 1);\r\n\t} \r\n\t\r\n\tconst computeActivation = (i: number, p: number): number => {\r\n\t\t// return i === p ? 1 : 0;\r\n\r\n        let d = Math.abs(i - p);\r\n        if (d > 2) {\r\n            d = 9999999;\r\n        }\r\n\t\treturn clampActivation(1 / Math.pow(d + 1, 2));\r\n\t}\r\n\t\r\n</script>\r\n\r\n{#each ['left-side', 'right-side'] as clz}\r\n\r\n<main\r\n    class={clz}\r\n    style=\"--pads-count: {PADS_COUNT};\"\r\n>\r\n\r\n\t{#each Array(PADS_COUNT) as _, i}\r\n\t\r\n\t<div style=\"--activation: {computeActivation(i, posY)};\"></div>\r\n\t\r\n\t{/each}\r\n\t\r\n</main>\r\n\r\n\r\n{/each}\r\n\r\n<style>\r\n\r\n\tmain {\r\n        --width: 0.5em;\r\n        --translate-len: 200%;\r\n\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-rows: repeat(var(--pads-count), 1fr);\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\twidth: var(--width);\r\n\t\theight: 100%;\r\n\t}\r\n\t\r\n\t.left-side {\r\n\t\tleft: 0;\r\n\t}\r\n\t\r\n\t.right-side {\r\n\t\tright: 0;\r\n\t}\r\n\t\r\n\tdiv {\r\n\t\tbackground-color: cyan;\r\n\t\tborder-radius: var(--width);\r\n\t\ttransition: transform 0.2s ease;\r\n\t}\r\n\r\n\t.left-side > div {\r\n\t\ttransform: translateX(calc(var(--translate-len) * var(--activation)));\r\n\t}\r\n\t\r\n\t.right-side > div {\r\n\t\ttransform: translateX(calc(-1 * var(--translate-len) * var(--activation)));\r\n\t}\r\n\t\r\n</style>\r\n","<script lang=\"ts\" context=\"module\">\r\n\r\n    interface DevToolData {\r\n        name: string,\r\n        icon?: string\r\n    }\r\n\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n    \r\n    import { onMount } from \"svelte\";\r\n\r\n\r\n    const STACK: DevToolData[] = [\r\n        {\r\n            name: \"Svelte\",\r\n            icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/1200px-Svelte_Logo.svg.png\"\r\n        },\r\n        {\r\n            name: \"TypeScript\",\r\n            icon: \"https://creazilla-store.fra1.digitaloceanspaces.com/icons/3254474/typescript-icon-icon-md.png\"\r\n        },\r\n        {\r\n            name: \"C++\",\r\n            icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/1822px-ISO_C%2B%2B_Logo.svg.png\"\r\n        },\r\n        {\r\n            name: \"Java\",\r\n            icon: \"https://cdn-icons-png.flaticon.com/512/226/226777.png\"\r\n        },\r\n        {\r\n            name: \"Python\",\r\n            icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/1869px-Python-logo-notext.svg.png\"\r\n        },\r\n        {\r\n            name: \"Rust\",\r\n            icon: \"http://rust-lang.org/logos/rust-logo-512x512.png\"\r\n        },\r\n    ];\r\n\r\n    let thisObj: HTMLElement;\r\n    let animate = false;\r\n    \r\n    let observer = new IntersectionObserver((e) => {\r\n        const entry: IntersectionObserverEntry = e[0];\r\n        if (!entry.isIntersecting) return;\r\n        animate = true;\r\n    }, {\r\n        rootMargin: '0px',\r\n        threshold: 1.0\r\n    });\r\n\r\n    onMount(() => {\r\n        observer.observe(thisObj);\r\n    });\r\n\r\n</script>\r\n\r\n<main style=\"--stack-size: {STACK.length}; --animation: {animate ? 'running' : 'paused'};\" bind:this={thisObj}>\r\n\r\n    {#each STACK as tool, i}\r\n\r\n    <div style=\"--index: {STACK.length - i - 1}\">\r\n        <img src={tool.icon ?? \"\"} alt={tool.name} />\r\n        <span>{tool.name}</span>\r\n    </div>\r\n\r\n    {/each}\r\n\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    main {\r\n        position: relative;\r\n        width: 300px;\r\n        height: 400px;\r\n        border: 1px solid cyan;\r\n        border-width: 5px 5px 1px 1px;\r\n        border-radius: 3px;\r\n        margin-bottom: 1em;\r\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\r\n        user-select: none;\r\n        -webkit-user-select: none;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position: absolute;\r\n        bottom: calc(100% + 1px);\r\n        left: calc((100% - (100% / 1.05)) / 2); /* center, so the animation stretches it to 100% */\r\n        width: calc(100% / 1.05);\r\n        height: calc(100% / var(--stack-size));\r\n        padding: 0.5em;\r\n        border: 1px solid cyan;\r\n        border-radius: 0.5em;\r\n        box-sizing: border-box;\r\n        text-align: center;\r\n        \r\n        --box-bottom: calc(var(--index) * 100% / var(--stack-size));\r\n\r\n        --fall-duration: 1s;\r\n        --fall-delay: calc(var(--fall-duration) * var(--index));\r\n        --fall-timing: cubic-bezier(0.6, 0, 1, 0.55);\r\n\r\n        --bounce-duration: 1s;\r\n        --bounce-delay: calc(var(--fall-delay) + var(--fall-duration));\r\n        --bounce-timing: ease;\r\n\r\n        animation-name: fall, bounce;\r\n        animation-duration: var(--fall-duration), var(--bounce-duration);\r\n        animation-delay: var(--fall-delay), var(--bounce-delay);\r\n        animation-fill-mode: forwards, forwards;\r\n        animation-timing-function: var(--fall-timing), var(--fall-timing);\r\n        animation-play-state: var(--animation), var(--animation);\r\n    }\r\n\r\n    img {\r\n        height: 100%;\r\n        /* aspect-ratio: 1 / 1; */\r\n    }\r\n\r\n    span {\r\n        flex: 1;\r\n    }\r\n\r\n    @keyframes fall {\r\n      0% {\r\n        bottom: calc(100% + 1px + var(--box-bottom));\r\n      }\r\n      \r\n      100% {\r\n        bottom: var(--box-bottom);\r\n      }\r\n    }\r\n    \r\n    @keyframes bounce {\r\n      0%  { transform: scale(1.05,.95) translateY(0); }\r\n      14%  { transform: scale(1,1)      translateY(-7px); }\r\n      28%  { transform: scale(1,1)      translateY(0); }\r\n      100% { transform: scale(1,1)      translateY(0); }\r\n    }\r\n\r\n    @media screen and (max-width: 1000px) {\r\n        main {\r\n            align-self: center;\r\n        }\r\n    }\r\n    \r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\n    export let size: string;\r\n\r\n</script>\r\n\r\n<img\r\n    src={`${window.location.href}icons/mark neo.svg`}\r\n    alt=\"Website Icon\"\r\n    style=\"width: {size}; height: {size};\"\r\n/>\r\n","<script lang=\"ts\">\r\n\r\n    export let size: string;\r\n\r\n</script>\r\n\r\n<svg\r\n   width=\"512\"\r\n   height=\"512\"\r\n   viewBox=\"0 0 512 512\"\r\n   style=\"--size: {size};\"\r\n>\r\n    <rect\r\n        fill=\"#000000;\"\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width=\"512\"\r\n        height=\"512\"\r\n    />\r\n    <path d=\"M 170.66667,50 V 462\" />\r\n    <path d=\"M 341.33333,50 V 461.99999\" />\r\n    <path d=\"M 50,170.66667 H 462\" />\r\n    <path d=\"M 60,341.33333 H 472\" />\r\n</svg>\r\n\r\n<style>\r\n\r\n    svg {\r\n        width: var(--size);\r\n        height: var(--size);\r\n        border: 1px solid white;\r\n        border-radius: calc(var(--size) / 6) 0 calc(var(--size) / 6) 0;\r\n    }\r\n\r\n    svg path {\r\n        stroke: rgb(0, 225, 255);\r\n        stroke-width: 20px;\r\n        stroke-linecap: round;\r\n        stroke-miterlimit: 0;\r\n    }\r\n\r\n</style>","<script lang=\"ts\" context=\"module\">\r\n    \r\n    import type { SvelteComponent } from \"svelte\";\r\n    \r\n    interface ProjectData {\r\n        icon?: typeof SvelteComponent,\r\n        title: string,\r\n        desc: string\r\n    }\r\n    \r\n    interface AnimationData {\r\n        running: boolean,\r\n        start: number | null,\r\n        duration: number,\r\n        callback?: () => void,\r\n        callbackCalled?: boolean\r\n    }\r\n    \r\n</script>\r\n\r\n<script lang=\"ts\">\r\n    \r\n    import { isMobileUser } from \"./App.svelte\";\r\nimport ExediceIcon from \"./projectIcons/ExediceIcon.svelte\";\r\n    import GravityWarpIcon from \"./projectIcons/GravityWarpIcon.svelte\";\r\n\r\n    const PROJECTS: ProjectData[] = [\r\n        {\r\n            icon: ExediceIcon,\r\n            title: \"My website\",\r\n            desc: \"This is the website you're currently on! Made with Svelte.\"\r\n        },\r\n        {\r\n            icon: GravityWarpIcon,\r\n            title: \"GravityWarp\",\r\n            desc: \"A nice little shader playground. Shows how gravity distords space. (I'm not a physicist!)\"\r\n        }\r\n    ];\r\n    const animationCurve = (t: number): number => {\r\n        return Math.pow(Math.cos((t - 1) * Math.PI / 2), 4);\r\n    };\r\n\r\n    let sectionElement: HTMLElement;\r\n    let currentProjectIndex = 0;\r\n    let animationData: AnimationData = {\r\n        running: false,\r\n        start: null,\r\n        duration: 1_000\r\n    };\r\n    \r\n    const defaultAnimationState = (): void => {\r\n        animationData.running = false;\r\n        animationData.callback = null;\r\n        animationData.callbackCalled = false;\r\n        animationData.start = null;\r\n    }\r\n\r\n    const showPrevious = (): void => {\r\n        if (animationData.running) requestAnimationFrame(showPrevious);\r\n        if (animationData.start == null) animationData.start = new Date().getTime();\r\n\r\n        let progress = (new Date().getTime() - animationData.start) / animationData.duration;\r\n        if (progress >= 1) {\r\n            progress = 1;\r\n            animationData.running = false;\r\n        }\r\n        progress = animationCurve(1 - progress);\r\n        \r\n        sectionElement.style.transform = `translateX(${progress * -100 * 2 + (progress < 0.5 ? 0 : 200)}%)`;\r\n        \r\n        \r\n        if (progress <= 0.5 && !animationData.callbackCalled && animationData.callback != undefined) {\r\n            animationData.callback();\r\n            animationData.callbackCalled = true;\r\n        }\r\n    }\r\n\r\n    const showNext = (): void => {\r\n        if (animationData.running) requestAnimationFrame(showNext);\r\n        if (animationData.start == null) animationData.start = new Date().getTime();\r\n        \r\n        let progress = (new Date().getTime() - animationData.start) / animationData.duration;\r\n        if (progress >= 1) {\r\n            progress = 1;\r\n            animationData.running = false;\r\n        }\r\n        progress = animationCurve(progress);\r\n        \r\n        sectionElement.style.transform = `translateX(${progress * -100 * 2 + (progress < 0.5 ? 0 : 200)}%)`;\r\n        \r\n\r\n        if (progress >= 0.5 && !animationData.callbackCalled && animationData.callback != undefined) {\r\n            animationData.callback();\r\n            animationData.callbackCalled = true;\r\n        }\r\n    }\r\n\r\n    const startAnimation = (a: () => void, cb: () => void): void => {\r\n        defaultAnimationState();\r\n        animationData.callback = cb;\r\n        animationData.running = true;\r\n        requestAnimationFrame(a);\r\n    }\r\n    \r\n    const previous = (): void => {\r\n        if (animationData.running) return;\r\n        startAnimation(showPrevious, () => {\r\n            if (currentProjectIndex === 0) {\r\n                currentProjectIndex = PROJECTS.length - 1;\r\n            } else {\r\n                currentProjectIndex -= 1;\r\n            }\r\n        });\r\n    }\r\n    \r\n    const next = (): void => {\r\n        if (animationData.running) return;\r\n        startAnimation(showNext, () => {\r\n            currentProjectIndex = (currentProjectIndex + 1) % PROJECTS.length;\r\n        });\r\n    }\r\n    \r\n</script>\r\n\r\n<main>\r\n\r\n    <div class=\"pos\">\r\n        {#each PROJECTS as _, i}\r\n        <span data-selected={i === currentProjectIndex}></span>\r\n        {/each}\r\n    </div>\r\n\r\n    <div class=\"nav\">\r\n        <button on:click={previous}>&lt;</button>\r\n        <button on:click={next}>&gt;</button>\r\n    </div>\r\n   \r\n    <section bind:this={sectionElement}>\r\n\r\n        <h2>{PROJECTS[currentProjectIndex].title}</h2>\r\n\r\n        <div class=\"icon-container\">\r\n            <svelte:component this={PROJECTS[currentProjectIndex].icon} size={isMobileUser ? '3em' : '7em'} />\r\n        </div>\r\n\r\n        <p>{PROJECTS[currentProjectIndex].desc}</p>\r\n\r\n    </section>\r\n\r\n</main>\r\n\r\n<style>\r\n\r\n    main {\r\n        display: grid;\r\n        grid-template-rows: 1em 1em 1fr;\r\n        height: 50vw;\r\n        aspect-ratio: 1 / 1;\r\n        margin: auto;\r\n        border: 1px solid cyan;\r\n        border-radius: 1em;\r\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\r\n    }\r\n\r\n    .pos {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        column-gap: 0.5em;\r\n    }\r\n\r\n    .pos > span {\r\n        height: 50%;\r\n        aspect-ratio: 1 / 1;\r\n        border: 1px solid cyan;\r\n        border-radius: 50%;\r\n        transition: background-color 0.2s ease;\r\n    }\r\n    \r\n    .pos > span[data-selected=\"true\"] {\r\n        background-color: cyan;\r\n    }\r\n\r\n    .nav {\r\n        display: flex;\r\n        width: 100%;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n        height: 100%;\r\n        border: none;\r\n        border-radius: 0.5em;\r\n        background-color: transparent;\r\n        color: var(--color-content);\r\n        transition: background-color 0.2s ease;\r\n        user-select: none;\r\n        -webkit-user-select: none;\r\n    }\r\n\r\n    button:hover {\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n    }\r\n    \r\n    section {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: stretch;\r\n        /* width: 100%; */\r\n        /* height: 100%; */\r\n        margin: 1em;\r\n        gap: 2em;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .icon-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 50%;\r\n        aspect-ratio: 1 / 1;\r\n        transition: transform 0.2s var(--ease-out);\r\n    }\r\n\r\n    .icon-container:hover {\r\n        transform: scale(1.15);\r\n    }\r\n    \r\n    section > h2 {\r\n        font-size: var(--big-font-size);\r\n    }\r\n    \r\n    section > p {\r\n        font-size: var(--standard-font-size);\r\n    }\r\n    \r\n    @media screen and (max-width: 1000px) {\r\n        main {\r\n            height: 100vw;\r\n            aspect-ratio: 1 / 1.5;\r\n        }\r\n\r\n        section > h2 {\r\n            font-size: var(--standard-font-size);\r\n        }\r\n        \r\n        section > p {\r\n            font-size: var(--very-small-font-size);\r\n        }\r\n    }\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\n\r\n    import { onMount } from \"svelte\"\r\n    import DevSkills from \"./Stack.svelte\";\r\n    import Projects from \"./Projects.svelte\";\r\n\r\n    let sections: HTMLElement[] = new Array(4);\r\n\r\n    let observer = new IntersectionObserver((e) => {\r\n        const entry: IntersectionObserverEntry = e[0];\r\n        if (!entry.isIntersecting) return;\r\n        entry.target.classList.add('animated');\r\n    }, {\r\n        rootMargin: '0px',\r\n        threshold: 0\r\n    });\r\n\r\n    onMount(() => {\r\n        sections.forEach((s) => {\r\n            if (s != undefined)\r\n                observer.observe(s);\r\n        });\r\n    });\r\n\r\n</script>\r\n\r\n<main>\r\n\r\n    <p bind:this={sections[0]}>Hi there! I'm Exedice. Glad to see you on my portfolio website!</p>\r\n\r\n    <section bind:this={sections[1]}>\r\n        <h2>About me</h2>\r\n        <p>\r\n            I'm just a regular highschooler.\r\n        </p>\r\n        <p>\r\n            I do a variety of different things: I'm a <span class=\"trait\">programmer</span>,\r\n            I try to make <span class=\"trait\">music</span> and draw <span class=\"trait\">pixelart</span> sometimes.\r\n            I'm not very good at it though.\r\n        </p>\r\n        <p>\r\n            I probably have a impostor syndrome. <span class=\"small\">(now read the previous sentence again)</span>\r\n        </p>\r\n        <p>\r\n            I like math and chemistry. Maybe becoming a <span class=\"trait\">bioinformaticists?</span> Who knows?\r\n        </p>\r\n    </section>\r\n\r\n    <section class=\"programming\" bind:this={sections[2]}>\r\n        <h2>My programming knowledge</h2>\r\n        <div>\r\n\r\n            <div>\r\n                <p>Let's get back to programming, shall we?</p>\r\n                <p>This is quite literally my stack!</p>\r\n                <p>The most used tools are at the top.</p>\r\n            </div>\r\n\r\n            <DevSkills />\r\n\r\n            <div>\r\n                <p>\r\n                    On top of that, I have also had some experience with\r\n                    <span class=\"trait\">Arduino</span> and <span class=\"trait\">Unity</span>\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"projects\" bind:this={sections[3]}>\r\n        <h2>Projects I've worked on</h2>\r\n\r\n        <Projects />\r\n    </section>\r\n    \r\n</main>\r\n\r\n{#if false}\r\n<span class=\"animated\"></span>\r\n{/if}\r\n\r\n<style>\r\n\r\n    main {\r\n        --vertical-margin: 10em;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 75%;\r\n        margin: var(--vertical-margin) 0 var(--vertical-margin) 0;\r\n    }\r\n\r\n    main > p {\r\n        text-align: center;\r\n    }\r\n\r\n    section {\r\n        margin: var(--vertical-margin) 0 var(--vertical-margin) 0;\r\n    }\r\n\r\n    section > h2 {\r\n        text-align: left;\r\n        color: grey;\r\n        margin: 0.5em 0 0.5em 0.2em;\r\n    }\r\n\r\n    section > p {\r\n        margin-top: 0.4em;\r\n        margin-bottom: 0.4em;\r\n    }\r\n\r\n    p {\r\n        margin: 0.2em;\r\n    }\r\n\r\n    .trait {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .small {\r\n        font-size: var(--very-small-font-size);\r\n    }\r\n\r\n    .programming > div {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    .animated {\r\n        animation-name: fade-in;\r\n        animation-duration: 1s;\r\n        animation-timing-function: ease;\r\n        animation-fill-mode: forwards;\r\n    }\r\n\r\n    @keyframes fade-in {\r\n        from {\r\n            transform: translateY(50%);\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            transform: translateY(0);\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 1000px) {\r\n        .programming > div {\r\n            display: flex;\r\n            flex-direction: column;\r\n            /* align-items: center; */\r\n            row-gap: 2em;\r\n        }\r\n    }\r\n\r\n</style>\r\n","<script lang=\"ts\" context=\"module\">\r\n\r\n\texport const isMobileUser = /Android|iPhone/i.test(navigator.userAgent);\r\n\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n\t\r\n    import NavBar from \"./NavBar.svelte\";\r\n    import Header from \"./Header.svelte\";\r\n    import Pads from \"./Pads.svelte\";\r\n    import SelfIntroduction from \"./SelfIntroduction.svelte\";\r\n\t\r\n\tlet content: HTMLElement;\r\n\r\n</script>\r\n\r\n<main style=\"--scrollbar-width: {isMobileUser ? '0px' : '16px'};\">\r\n\r\n\t<NavBar />\r\n\r\n\t<Header />\r\n\r\n\t<div class=\"content\" bind:this={content}>\r\n\t\t<Pads parent={content} />\r\n\t\t<SelfIntroduction />\r\n\t</div>\r\n\r\n</main>\r\n\r\n<svelte:head>\r\n\r\n\t<link rel='icon' type='image/png' href='{window.location.href}/favicon.png'>\r\n\r\n</svelte:head>\r\n\r\n<style>\r\n\r\n\tmain {\r\n\t\twidth: 100%;\r\n\t\tmin-width: 200px;\r\n\t\toverflow-x: hidden;\r\n\t}\r\n\r\n\t.content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n</style>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","removeProperty","setProperty","construct_svelte_component","component","props","set_current_component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","seen_callbacks","Set","flushidx","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","create_if_block","create_if_block_1","div","nav","button0","button1","button2","button3","button4","button5","button6","thisObj","folded","copyStatus","toggleFold","height","getComputedStyle","getPropertyValue","top","goTo","window","open","copy","txt","navigator","clipboard","writeText","async","$$invalidate","catch","setTimeout","$$value","location","img","img_src_value","main","each_value_1","PADS_COUNT","each_value","parent","posY","listenerSet","updatePosCursor","offsetY","clientY","getBoundingClientRect","y","Math","floor","clientHeight","updatePosScroll","scrolled","body","scrollTop","offsetTop","undefined","isMobileUser","abs","pow","min","max","t1_value","icon","span","animate","observer","IntersectionObserver","isIntersecting","rootMargin","threshold","observe","size","svg","rect","path0","path1","path2","path3","span_data_selected_value","title","desc","div0","div1","section","h2","div2","t5","t5_value","r","t8","t8_value","PROJECTS","ExediceIcon","GravityWarpIcon","animationCurve","t","cos","PI","sectionElement","currentProjectIndex","animationData","running","start","duration","showPrevious","requestAnimationFrame","Date","getTime","progress","transform","callbackCalled","showNext","startAnimation","cb","p0","section0","section1","h21","section2","h22","sections","entry","classList","s","head","link","test","userAgent","content"],"mappings":"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"}